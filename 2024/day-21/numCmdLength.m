function l = numCmdLength( C, r )

persistent NUMPAD;
if isempty( NUMPAD )

  % 1  1    789    ^ 1     ^A
  % 2  2    456    < 2    <V>
  % 3  3    123    > 3
  % 4  4     0A    V 4
  % 5  5           A 5
  % 6  6
  % 7  7
  % 8  8
  % 9  9
  % 0 10
  % A 11

  NUMPAD = { ...
    [], 3, [ 3 3 ], 1, [ 1 3 ], [ 1 3 3 ], [ 1 1 ], [ 1 1 3 ], [ 1 1 3 3 ], [ 3 4 ], [ 3 3 4 ] ; ...
    2, [], 3, [ 2 1 ], 1, [ 1 3 ], [ 2 1 1 ], [ 1 1 ], [ 1 1 3 ], 4, [ 4 3 ] ; ...
    [ 2 2 ], 2, [], [ 2 2 1 ], [ 2 1 ], 1, [ 2 2 1 1 ], [ 2 1 1 ], [ 1 1 ], [ 2 4 ], 4 ; ...
    4, [ 4 3 ], [ 4 3 3 ], [], 3, [ 3 3 ], 1, [ 1 3 ], [ 1 3 3 ], [ 3 4 4 ], [ 3 3 4 4 ] ; ...
    [ 2 4 ], 4, [ 4 3 ], 2, [], 3, [ 2 1 ], 1, [ 1 3 ], [ 4 4 ], [ 4 4 3 ] ; ...
    [ 2 2 4 ], [ 2 4 ], 4, [ 2 2 ], 2, [], [ 2 2 1 ], [ 2 1 ], 1, [ 2 4 4 ], [ 4 4 ] ; ...
    [ 4 4 ], [ 4 4 3 ], [ 4 4 3 3 ], 4, [ 4 3 ], [ 4 3 3 ], [], 3, [ 3 3 ], [ 3 4 4 4 ], [ 3 3 4 4 4 ] ; ...
    [ 2 4 4 ], [ 4 4 ], [ 4 4 3 ], [ 2 4 ], 4, [ 4 3 ], 2, [], 3, [ 4 4 4 ], [ 4 4 4 3 ] ; ...
    [ 2 2 4 4 ], [ 2 4 4 ], [ 4 4 ], [ 2 2 4 ], [ 2 4 ], 4, [ 2 2 ], 2, [], [ 2 4 4 4 ], [ 4 4 4 ] ; ...
    [ 1 2 ], 1, [ 1 3 ], [ 1 2 1 ], [ 1 1 ], [ 1 1 3 ], [ 1 1 1 2 ], [ 1 1 1 ], [ 1 1 1 3 ], [], 3 ; ...
    [ 1 2 2 ], [ 2 1 ], 1, [ 1 1 2 2 ], [ 2 1 1 ], [ 1 1 ], [ 1 1 1 2 2 ], [ 2 1 1 1 ], [ 1 1 1 ], 2, [] };

end

C = [ 11 C ];

l = 0;
for c = 1:length(C)-1
  P = [ 5 NUMPAD{ C(c), C(c+1) } 5 ];
  for n = 1:size(P,2)-1
    l = l + padCmdLength( P(n), P(n+1), r );
  end
end
